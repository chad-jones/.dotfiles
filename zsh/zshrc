# ~/.zshrc

# Base16 Shell
if [ -z $VIMRUNTIME ]; then 
  BASE16_SHELL="$HOME/.config/base16-shell/"
  [ -n "$PS1" ] && \
      [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
          eval "$("$BASE16_SHELL/profile_helper.sh")"
fi

# Disable crtl+s
stty -ixon

# Load Nerd Fonts with Powerlevel9k theme for Zsh
POWERLEVEL9K_MODE='nerdfont-complete'

# Customise the Powerlevel9k prompts
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    vi_mode
	kubecontext
	dir
)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    background_jobs
    root_indicator
    status
    vcs
	os_icon
)
## Powerlevel9k Colors
# Kubectx
POWERLEVEL9K_KUBECONTEXT_BACKGROUND='grey35'
POWERLEVEL9K_KUBECONTEXT_FOREGROUND='grey82'

# OS icon
POWERLEVEL9K_OS_ICON_BACKGROUND='grey82'
POWERLEVEL9K_OS_ICON_FOREGROUND='grey39'

# Advandced `dir` color customization 
POWERLEVEL9K_DIR_HOME_BACKGROUND='grey19'
POWERLEVEL9K_DIR_HOME_FOREGROUND='grey58'
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND='grey19'
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND='grey58'
POWERLEVEL9K_DIR_HOME_DEFAULT_BACKGROUND='grey19'
POWERLEVEL9K_DIR_HOME_DEFAULT_FOREGROUND='grey58'
POWERLEVEL9K_DIR_HOME_ETC_BACKGROUND='grey19'
POWERLEVEL9K_DIR_HOME_ETC_FOREGROUND='grey58'


POWERLEVEL9K_SHORTEN_STRATEGY='truncate_from_right'
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3

# Advanced `vcs` color customization
POWERLEVEL9K_VCS_CLEAN_FOREGROUND='black'
POWERLEVEL9K_VCS_CLEAN_BACKGROUND='blue'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='yellow'
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='black'
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='red'
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='black'

# Advanced `vi_mode` color customization
POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND='skyblue1'
POWERLEVEL9K_VI_MODE_NORMAL_FOREGROUND='grey27'
POWERLEVEL9K_VI_MODE_INSERT_BACKGROUND='green'
POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND='grey27'

# Advanced `status` color customization
POWERLEVEL9K_STATUS_OK_BACKGROUND='grey35'
POWERLEVEL9K_STATUS_OK_FOREGROUND='green'
POWERLEVEL9K_STATUS_ERROR_BACKGROUND='grey35'
POWERLEVEL9K_STATUS_ERROR_FOREGROUND='red'

# Time colors
POWERLEVEL9K_TIME_BACKGROUND='grey50'
POWERLEVEL9K_TIME_FOREGROUND='grey27'

# Background jobs colors
POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND='grey19'
POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND='grey58'

# Segment separators
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=''
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=''

# Prompt customization
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="â–¶ "
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""

# Enable autocompletions
autoload -Uz compinit

typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

zmodload -i zsh/complist

# Save history so we get auto suggestions
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE

# Load antibody plugin manager
source <(antibody init)
antibody bundle < ~/.zsh_plugins.txt

# ZSH options
setopt auto_cd # cd by typing directory name if it's not a command
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match
setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances
setopt correct_all # autocorrect commands
setopt interactive_comments # allow comments in interactive shells

# Improve autocompletion style
zstyle ':completion:*' menu select # select completions with arrow keys
zstyle ':completion:*' group-name '' # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate # enable approximate matches for completion

## Vi mode config ##
bindkey -v

# Vi mode cursor
MODE_CURSOR_VICMD="white block"
MODE_CURSOR_VIINS="white blinking bar"
MODE_CURSOR_SEARCH="white steady underline"

# Easier, more vim-like editor opening
bindkey -M vicmd v edit-command-line

# `v` is already mapped to visual mode, so we need to use a different key to
# open Vim
bindkey -M vicmd "^V" edit-command-line

# Better searching in command mode
bindkey -M vicmd '?' history-incremental-search-backward
bindkey -M vicmd '/' history-incremental-search-forward

# Beginning search with arrow keys
bindkey '^[OA' up-line-or-beginning-search
bindkey '^[OB' down-line-or-beginning-search
bindkey -M vicmd 'k' up-line-or-beginning-search
bindkey -M vicmd 'j' down-line-or-beginning-search

# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=14

# Vi mode remap esc to jj 
bindkey -M viins 'jj' vi-cmd-mode

# Better search history
# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# Keybindings
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[[3~' delete-char
bindkey '^[3;5~' delete-char

# Open new tabs in same directory
if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]]; then
  function chpwd {
    printf '\e]7;%s\a' "file://$HOSTNAME${PWD// /%20}"
  }

  chpwd
fi

# OS specific
case `uname` in
  Darwin)
    # OS X
    ## Colorize the ls output ##
    alias ls='ls -G'
    alias fuckdns='sudo killall -HUP mDNSResponder;sudo killall mDNSResponderHelper;sudo dscacheutil -flushcache'
    # fzf
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
    #GPG
    export "SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh"
    # Go development
    export GOPATH="${HOME}/go"
    export GOROOT="$(brew --prefix golang)/libexec"
    export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"
    # Add Visual Studio Code (code)
    export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
  ;;
  Linux)
    # Linux
    # fzf
    source /usr/share/doc/fzf/key-bindings.zsh
    source /usr/share/doc/fzf/completion.zsh
    # clipboard aliases
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
    ## Colorize the ls output ##
    alias ls='ls --color=auto'
    alias du="ncdu"
    export GOPATH="${HOME}/go"
  ;;
esac

# Aliases
eval $(thefuck --alias)
alias grep='grep --color'
alias ll='ls -lhA'
alias l.='ls -d .*'
alias mkdir="mkdir -pv"
alias histg="history | grep"
alias top="htop"
alias myip="curl http://ipecho.net/plain; echo"
alias fuckgpg='gpg-connect-agent killagent /bye; gpg-connect-agent /bye'
eval "$(hub alias -s)"

# GPG
export "GPG_TTY=$(tty)"


if [ -r ${HOME}/.zshrc_local ]; then
    source ${HOME}/.zshrc_local
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

